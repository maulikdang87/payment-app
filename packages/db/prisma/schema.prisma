
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String                @id @default(uuid())
  email             String?               @unique
  name              String?
  phone             String                @unique
  password          String
  OnRampTransaction OnRampTransaction[]
  Balance           Balance[]
  sentTransfers     p2pTransactions[]     @relation(name: "FromUserRelation") 
  receivedTransfers p2pTransactions[]     @relation(name: "ToUserRelation")
}

model Merchant {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  auth_type AuthType
}

model OnRampTransaction {
  id        Int          @id @default(autoincrement())
  status    OnRampStatus
  token     String       @unique
  provider  String
  amount    Int
  startTime DateTime
  userId    String
  user      User         @relation(fields: [userId], references: [id])
}

model Balance {
  id     String  @id @default(uuid())
  userId String  @unique
  amount Int
  locked Int
  user   User @relation(fields: [userId], references: [id])
}

model p2pTransactions {
  id Int @id @default(autoincrement())
  amount Int
  timeStamp DateTime
  fromUserId String
  fromUser User @relation(name : "FromUserRelation" ,fields: [fromUserId], references: [id])
  toUserId String
  toUser User @relation(name : "ToUserRelation" ,fields: [toUserId], references: [id])
}

enum AuthType {
  Google
  Github
}

enum OnRampStatus {
  Success
  Failure
  Processing
}
